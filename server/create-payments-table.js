// Script to manually create payments table
// This needs to be run manually since we can't execute DDL through Supabase API

const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = 'https://uswswsiarylffxqdwiot.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVzd3N3c2lhcnlsZmZ4cWR3aW90Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDAyNTkzNjIsImV4cCI6MjA1NTgzNTM2Mn0.zocHcEHF5SBpAqknlPp-dsnbcfmn2lGfmNTyHRWhWuw';

const supabase = createClient(supabaseUrl, supabaseKey);

async function testPaymentsTable() {
  console.log('Testing payments table...');
  
  // Try to insert a test payment
  const testPayment = {
    payment_key: 'test-1-2',
    month_key: '2024-12',
    from_person_id: 1,
    to_person_id: 2,
    amount: 25.50,
    paid: false
  };
  
  const { data, error } = await supabase
    .from('payments')
    .insert(testPayment)
    .select();
    
  if (error) {
    console.error('Payments table does not exist or has permission issues:', error);
    console.log('\nTo create the payments table, please run this SQL in your Supabase dashboard:');
    console.log('\n' + `
-- Create payments table to track settlement status
CREATE TABLE IF NOT EXISTS public.payments (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    from_person_id BIGINT NOT NULL,
    to_person_id BIGINT NOT NULL,
    amount DECIMAL(10, 2) NOT NULL,
    month_key TEXT NOT NULL,
    payment_key TEXT NOT NULL,
    paid BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL,
    
    -- Foreign key constraints
    CONSTRAINT fk_from_person FOREIGN KEY (from_person_id) REFERENCES public.people(id) ON DELETE CASCADE,
    CONSTRAINT fk_to_person FOREIGN KEY (to_person_id) REFERENCES public.people(id) ON DELETE CASCADE,
    
    -- Unique constraint to prevent duplicate payments for same settlement
    CONSTRAINT unique_payment_settlement UNIQUE (payment_key, month_key)
);

-- Grant permissions
GRANT ALL ON public.payments TO anon;
GRANT ALL ON public.payments_id_seq TO anon;

-- Create index for faster queries
CREATE INDEX IF NOT EXISTS idx_payments_month_key ON public.payments(month_key);
CREATE INDEX IF NOT EXISTS idx_payments_payment_key ON public.payments(payment_key);
    `.trim());
  } else {
    console.log('Payments table exists and working! Test data inserted:', data);
    
    // Clean up test data
    await supabase
      .from('payments')
      .delete()
      .eq('payment_key', 'test-1-2');
    console.log('Test data cleaned up.');
  }
}

testPaymentsTable();